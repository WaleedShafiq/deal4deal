@import 'layout';
$ErrorColor: rgb(228, 17, 17);
.error-msg {
    color: $ErrorColor !important;
}

.form-group.invalid-data i {
    color: $ErrorColor !important;
}

.invalid-data {
    label {
        color: $ErrorColor;
    }
    small {
        color: $ErrorColor;
    }
}

.invalid-data .col-form-label,
.invalid-data .form-control-label {
    color: $ErrorColor;
}

.invalid-data .input-group-addon {
    color: $ErrorColor;
    border-color: $ErrorColor;
}

.invalid-data .form-control {
    color: $ErrorColor;
    border-color: $ErrorColor !important;
}

.invalid-data .invalid-text {
    color: $ErrorColor;
    border-color: $ErrorColor;
}

.invalid-data {
    .select2-container--default .select2-selection--single {
        border-color: $ErrorColor !important;
    }
    .select2-container--default .select2-selection--multiple {
        border-color: $ErrorColor !important;
    }
    .select2-container--default .select2-selection--single .select2-selection__arrow b {
        border-color: $ErrorColor transparent transparent transparent !important;
    }
}

.containerRegisterForm {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    .verifyButton {
        width: 100%;
    }
    a.font-weight-bold {
        text-decoration: underline;
        font-size: 15px;
        cursor: pointer;
    }
    a.accept {
        cursor: pointer;
        user-select: none;
    }
}

// star to required field
.required:after {
    content: " *";
}

// star to required field

/* Hide the browser's default checkbox */

input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}


/* Create a custom checkbox */

.checkmark {
    position: absolute;
    top: 12px;
    height: 25px;
    border-radius: 5px;
    width: 25px;
    background-color: #FFF;
    border: 1px solid #231F20;
    cursor: pointer;
}

// .customCheckBox:hover input ~ .checkmark {
//   background-color:  $grayColor;
// }

/* When the checkbox is checked, add a blue background */

// .customCheckBox input:checked ~ .checkmark {
//   background-color: red;
// }

/* Create the checkmark/indicator (hidden when not checked) */

.customCheckBox .checkmark:after {
    content: "";
    position: absolute;
    display: none;
}


/* Show the checkmark when checked */

input:checked~.checkmark:after {
    display: block;
}

.customCheckBox .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid $grayColor;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
    z-index: 2;
}

label {
  color:  #000;
}
